{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "database.fullname" . }}
  labels:
    {{- include "database.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "database.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.database.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "database.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.database.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "database.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.database.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.database.securityContext | nindent 12 }}
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
          imagePullPolicy: {{ .Values.database.image.pullPolicy }}
          ports:
            - name: psql
              containerPort: 5432
              protocol: TCP
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
          env:
            - name: PGDATA
              value: /pgdata/data
            {{- range $name, $value := .Values.database.env }}
            - name: {{ $name }}
              value: {{ $value }}
            {{- end }}
            {{- range .Values.database.extraSecretEnvironmentVars }}
              - name: {{ .envName }}
                valueFrom:
                  secretKeyRef:
                    name: {{ .secretName }}
                    key: {{ .secretKey }}
            {{- end -}}
          
          {{- if or .Values.database.extraVolumeMounts .Values.database.persistence.enabled }}
          volumeMounts:
            {{- if .Values.database.extraVolumeMounts }}
              {{ toYaml .Values.database.extraVolumeMounts | nindent 12 }}
            {{- end }}
            {{- if .Values.database.persistence.enabled }}
            - name: data
              mountPath: /pgdata
            {{- end }}
          {{- end }}
      {{- with .Values.database.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

    {{- if or .Values.database.persistence.enabled .Values.database.extraVolumes }}
      volumes:
      {{- if .Values.database.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "database.persistence.claim" . }}
      {{- end }}
      {{- if .Values.database.extraVolumes }}
        {{ toYaml .Values.database.extraVolumes | nindent 8}}
      {{- end }}
    {{- end }}
---

{{- if and .Values.database.persistence.enabled (not .Values.database.persistence.existingClaim) -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  {{- if .Values.database.persistence.annotations }}
  annotations:
{{ toYaml .Values.database.persistence.annotations | indent 4 }}
  {{- end }}
  labels:
    {{- include "database.labels" . | nindent 4 }}
  name: {{ template "database.fullname" . }}
spec:
  accessModes:
    {{- toYaml .Values.database.persistence.accessModes | nindent 4 }}
    {{- if or (not .Values.database.persistence.storageClass) (eq "-" .Values.database.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: {{ .Values.database.persistence.storageClass }}
    {{- end }}
  
  {{- if .Values.database.persistence.volumeMode }}
  volumeMode: {{ .Values.database.persistence.volumeMode }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.database.persistence.size }}
{{- end -}}
{{- end }}