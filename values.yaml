imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: false
  annotations: []
  hosts:
    # Paths are based on the active modules, do not include here
    - host: ""

server:
  enabled: true
  replicas: 1
  image:
    repository: psono/psono-server
    pullPolicy: IfNotPresent
    tag: latest

  service:
    type: ClusterIP
    port: 10100

  serviceAccount:
    create: true
    annotations: {}
    name: ""

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Configuring the server is done via env variables. You can add PSONO_var_name to specify
  # the variables listed here: https://doc.psono.com/admin/installation/install-server-ce.html#installation-with-docker
  env: {}
  extraSecretEnvironmentVars: []
  extraVolumeMounts: []
  extraVolumes: []

  envFiles: []

webclient:
  enabled: true
  replicas: 1
  image:
    repository: psono/psono-client
    pullPolicy: IfNotPresent
    tag: latest

  service:
    port: 10101

  serviceAccount:
    create: true
    annotations: {}
    name: ""

  extraVolumeMounts: []
  extraVolumes: []

database:
  enabled: true
  replicas: 1
  image:
    repository: postgres
    pullPolicy: IfNotPresent
    tag: latest

  service:
    port: 5432

  serviceAccount:
    create: true
    annotations: {}
    name: ""

  persistence:
    enabled: false
    storageClass: "-"
    existingClaim: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi

  env: []
    # POSTGRES_PASSWORD:
    # POSTGRES_PASSWORD_FILE:
    # POSTGRES_USER: psono
    # POSTGRES_DB: psono

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraSecretEnvironmentVars: []
  extraVolumeMounts: []
  extraVolumes: []

adminClient:
  enabled: true
  replicas: 1
  image:
    repository: psono/psono-admin-client
    pullPolicy: IfNotPresent
    tag: latest

  service:
    port: 10102

  serviceAccount:
    create: true
    annotations: {}
    name: ""

  extraVolumeMounts: []
  extraVolumes: []

mail:
  enabled: false

backup:
  enabled: false
  image:
    repository: postgres
    tag: latest
    pullPolicy: IfNotPresent

  schedule: "00 6 * * *"
  startingDeadlineSeconds: 100
  restartPolicy: OnFailure

  envFiles: []
  env: {}
    # BACKUP_TARGET:
    # POSTGRES_USER:
    # POSTGRES_DB:
    # POSTGRES_PASSWORD:
    # POSTGRES_HOST: 

  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraSecretEnvironmentVars: []
  extraVolumeMounts: []
  extraVolumes: []

  serviceAccount:
    create: true
    annotations: {}
    name: ""
